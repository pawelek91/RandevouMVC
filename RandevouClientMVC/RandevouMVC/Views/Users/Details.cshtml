@model RandevouMVC.ViewModels.Users.UserComplexViewModel
<h2>@Model.User.DisplayName</h2>

<a asp-controller="Messages" asp-action="Details" asp-route-id="@Model.User.Id" class="btn btn-outline-primary">Wiadomość</a>


@{
    switch (Model.FriendshipStatus)
    {
        case FriendshipStatus.ExistsAsFriend: <p class="font-weight-light">Twój znajomy</p> break;

        case FriendshipStatus.ReceivedInvitation: <p class="font-weight-light"> Otrzymałeś zaproszenie do znajomych</p> break;
case FriendshipStatus.None:
    <a asp-controller="Friends" asp-action="Invite" asp-route-id="@Model.User.Id" class="btn btn-outline-secondary">Wyślij zaproszenie do znajomych</a> break;
default: break;

}
}

<table class="table table-striped">
    <tr>
        <th>Płeć</th>
        <td>@Model.User.Gender</td>
    </tr>

    <tr>
        <th>Wiek</th>
        <td>@Model.User.Age</td>
    </tr>

    <tr>
        <th>Wzrost</th>
        <td>@Model.Details.Width</td>
    </tr>

    <tr>
        <th>Waga</th>
        <td>@Model.Details.Weight</td>
    </tr>

    <tr>
        <th>Kolor oczu</th>
        <td>@Model.Details.EyesColor</td>
    </tr>

    <tr>
        <th>Kolor włosów</th>
        <td>@Model.Details.HairColor</td>
    </tr>

    <tr>
        <th>Zainteresowania</th>
        <td>
            @for (int i = 0; i < Model.Details.Interests.Count(); i++)
            {

                if (i < Model.Details.Interests.Count() - 1)
                {
                    @string.Format("{0},", Model.Details.Interests[i])
                }
                else
                {
                    @Model.Details.Interests[i]
                }

            }
        </td>
    </tr>

</table>

